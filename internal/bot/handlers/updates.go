package handlers

import (
	"fmt"
	"time"

	"github.com/IlyaMakar/finance_bot/internal/repository"
	"github.com/IlyaMakar/finance_bot/internal/service"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

const currentVersion = "1.2.0"

func (b *Bot) CheckForUpdates() {
	latestVersion, err := b.repo.GetLatestVersion()
	if err != nil {
		svc := service.NewService(b.repo, &repository.User{ID: 0})
		svc.AddVersion(currentVersion, getVersionDescription(currentVersion))
		return
	}

	if latestVersion == nil || latestVersion.Version != currentVersion {
		svc := service.NewService(b.repo, &repository.User{ID: 0})
		description := getVersionDescription(currentVersion)
		svc.AddVersion(currentVersion, description)
	}
}

func (b *Bot) NotifyUsersAboutUpdate() {
	latestVersion, err := b.repo.GetLatestVersion()
	if err != nil || latestVersion == nil {
		return
	}

	users, err := b.repo.GetAllUsers()
	if err != nil {
		return
	}

	for _, user := range users {
		svc := service.NewService(b.repo, &user)

		hasRead, err := svc.HasUserReadVersion(latestVersion.ID)
		if err != nil || hasRead {
			continue
		}

		msg := tgbotapi.NewMessage(
			user.TelegramID,
			fmt.Sprintf("üéâ *–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞ –¥–æ v%s!*\n\n%s\n\n_–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞!_",
				latestVersion.Version,
				latestVersion.Description),
		)
		msg.ParseMode = "Markdown"
		b.SendMessage(msg)

		svc.MarkVersionAsRead(latestVersion.ID)

		time.Sleep(100 * time.Millisecond)
	}
}

func getVersionDescription(version string) string {
	descriptions := map[string]string{
		"1.2.0": `üöÄ –ì–æ—Ä—è—á–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ! –í–µ—Ä—Å–∏—è 1.2.0 üöÄ

‚ú® *–ß—Ç–æ –Ω–æ–≤–æ–≥–æ –≤ —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏:*
- üéõÔ∏è¬† *–ù–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å!* –¢–ü–æ–ª–Ω–æ—Å—Ç—å—é —É–±—Ä–∞–ª–∏ –Ω–∏–∂–Ω—é—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º —Å—Ç–∞–ª–æ –µ—â–µ —É–¥–æ–±–Ω–µ–µ –∏ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–µ–µ ‚Äî –≤—Å–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Ç–µ–ø–µ—Ä—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ –∞–∫–∫—É—Ä–∞—Ç–Ω—ã–µ –≤—Å–ø–ª—ã–≤–∞—é—â–∏–µ –º–µ–Ω—é. 
- üí¨¬†*–£–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è!* –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–∏ –Ω–æ–≤–æ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏. –õ–µ–Ω—Ç–∞ –ø–µ—Ä–µ–ø–∏—Å–∫–∏ —Ç–µ–ø–µ—Ä—å —á–∏—Å—Ç–∞—è –∏ –∞–∫–∫—É—Ä–∞—Ç–Ω–∞—è, –Ω–∏—á—Ç–æ –Ω–µ –æ—Ç–≤–ª–µ–∫–∞–µ—Ç –æ—Ç –∞–Ω–∞–ª–∏–∑–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤.
- üìÖ¬†*–ï—â–µ –±–æ–ª–µ–µ –≥–∏–±–∫–∏–π –≤—ã–±–æ—Ä –¥–∞—Ç!*¬†–ü–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–ª–∏ –∏ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ª—É—á—à–∏–ª–∏ –º–µ—Ö–∞–Ω–∏–∑–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –¢–µ–ø–µ—Ä—å —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –Ω—É–∂–Ω—ã–µ –¥–∞—Ç—ã —Å—Ç–∞–ª–æ –ø—Ä–æ—â–µ –∏ –±—ã—Å—Ç—Ä–µ–µ.
- üêñ¬†*–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ø–∏–ª–æ–∫!*¬†–†–µ—à–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∫–æ–ø–∏–ª–æ–∫. –¢–µ–ø–µ—Ä—å –≤–∞—à–∏ —Ü–µ–ª–∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è –º–æ–∂–Ω–æ –ª–µ–≥–∫–æ –∏–∑–º–µ–Ω—è—Ç—å –±–µ–∑ –æ—à–∏–±–æ–∫..
- ‚ö° *–ü–æ–≤—ã—à–µ–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å!* –ü—Ä–æ–≤–µ–ª–∏ –≥–ª—É–±–æ–∫—É—é –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –∫–æ–¥–∞. –ë–æ—Ç —Å—Ç–∞–ª –∑–∞–º–µ—Ç–Ω–æ —à—É—Å—Ç—Ä–µ–µ –∏ —Å—Ç–∞–±–∏–ª—å–Ω–µ–µ, —á—Ç–æ–±—ã –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –≤–∞—à–∏ –∑–∞–ø—Ä–æ—Å—ã.

üîß¬† –ê —Ç–∞–∫–∂–µ:
- –ú–µ–ª–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è –µ—â–µ –±–æ–ª—å—à–µ–≥–æ –∫–æ–º—Ñ–æ—Ä—Ç–∞. 

üí°¬†*–°–æ–≤–µ—Ç –æ—Ç –±–æ—Ç–∞:*¬†–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, —á—Ç–æ–±—ã —É–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏ –µ—â–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ! –ù–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /start`,
	}

	if desc, ok := descriptions[version]; ok {
		return desc
	}
	return "üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞! –û—Ç–∫—Ä–æ–π—Ç–µ –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Å—Ç–∞–Ω—å—Ç–µ –±–ª–∏–∂–µ –∫ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å–≤–æ–±–æ–¥–µ! üöÄ"
}
